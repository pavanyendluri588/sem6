<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.071ngs20ck1g0n174xp4501tkznu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0baouo800c2g4r1efthaj00sxuw8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/datasets/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0baouo800c2g4r1efthaj00sxuw8' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0baouo800c2g4r1efthaj00sxuw8' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_CC66D5FD7E5F4E61936460C328588E3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_CC66D5FD7E5F4E61936460C328588E3E]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country/Region, City'>
          <field>[Country/Region]</field>
          <field>[State/Province]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_CC66D5FD7E5F4E61936460C328588E3E'>
            <properties context=''>
              <relation connection='excel-direct.0baouo800c2g4r1efthaj00sxuw8' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.071ngs20ck1g0n174xp4501tkznu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.071ngs20ck1g0n174xp4501tkznu'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.071ngs20ck1g0n174xp4501tkznu].[Latitude (generated)]' field-type='quantitative' max='10166921.472148335' min='1891386.8987853969' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.071ngs20ck1g0n174xp4501tkznu].[Longitude (generated)]' field-type='quantitative' max='-4449194.4714477621' min='-17679302.445791293' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:State/Province:nk]' value='false' />
            <format attr='break-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:State/Province:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:State/Province:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:City:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:Postal Code:nk]' value='false' />
            <format attr='break-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:Postal Code:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.071ngs20ck1g0n174xp4501tkznu].[none:Postal Code:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.071ngs20ck1g0n174xp4501tkznu].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.071ngs20ck1g0n174xp4501tkznu].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.071ngs20ck1g0n174xp4501tkznu].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.071ngs20ck1g0n174xp4501tkznu].[sum:Discount:qk]' />
              <text column='[federated.071ngs20ck1g0n174xp4501tkznu].[sum:Sales:qk]' />
              <lod column='[federated.071ngs20ck1g0n174xp4501tkznu].[none:State/Province:nk]' />
              <lod column='[federated.071ngs20ck1g0n174xp4501tkznu].[none:Country/Region:nk]' />
              <geometry column='[federated.071ngs20ck1g0n174xp4501tkznu].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.087458610534668' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.071ngs20ck1g0n174xp4501tkznu].[Latitude (generated)]</rows>
        <cols total='true'>[federated.071ngs20ck1g0n174xp4501tkznu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B2E01482-C646-4C12-BE4D-210E8FD3D4B2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{29243043-398A-40F8-BE74-CCFB6F90FBDE}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.071ngs20ck1g0n174xp4501tkznu].[sum:Discount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.071ngs20ck1g0n174xp4501tkznu].[none:City:nk]</field>
            <field>[federated.071ngs20ck1g0n174xp4501tkznu].[none:Country/Region:nk]</field>
            <field>[federated.071ngs20ck1g0n174xp4501tkznu].[none:Postal Code:nk]</field>
            <field>[federated.071ngs20ck1g0n174xp4501tkznu].[none:State/Province:nk]</field>
            <field>[federated.071ngs20ck1g0n174xp4501tkznu].[sum:Discount:qk]</field>
            <field>[federated.071ngs20ck1g0n174xp4501tkznu].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{84135C1C-7737-4B7E-93CB-6742E8EC9FD0}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D0143F59-B8EA-48C2-9735-596879BD994B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
