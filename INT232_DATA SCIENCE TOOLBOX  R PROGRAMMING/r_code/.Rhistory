names(x1)  #[1] "a"        "b column" "c"        "d"        "e"
names(x2)   #NUll because there is no name indexing the the x2
#reassigning the name or attributes  of the x1 list
names(x1)=c("a1","b1","c1","d1","e1")
names(x1)  #[1] "a1" "b1" "c1" "d1" "e1"
#merging the two listes
list1=list("s no"=1:3,"cost"=c("100/kg","500/kg","1000/kg"),fruits=c("apples","mango","grapes"))
list2=list(20:23)
list3=c(lsit1,list2)  #easy way of merging
list3
#creating the nested list
list3=list(list1,list2) #not the correct way of merging   and complex
list3
#by using the unlist we can convert the list to vector
#because vector iss light storage  and easy work
v1=unlink(list1)
v1
#after creating the vector we can delete the list because there is no use of the main list1
rm(list1)
typeof(v1)
#conforming the package is loaded or not
#search()
?sqldf
empid
empid=vector(1:5)
empid
empid=vector(data=1:5)
empid
emp data.frame(empid,empname,job,dept,salary)
empid=c(1:5)
empid=1:5
empname=c("pavan","ram","chandar","prudhvi","rama")
job=c("software developer","database architect",NA,"data analyst","data scintest")
dept=c(NA,NA,NA,NA,NA)
salary=c(250000L,3500000L,1200000L,4500000L,6700000L)
emp=data.frame(empid,empname,job,dept,salary)
emp
#installing the package
#install.packages("sqldf")
#loading to install
#library(sqldf)
#require(sqldf)
#conforming the package is loaded or not
#search()
?sqldf
empid=c(1:5)
empid=1:5
empname=c("pavan","ram","chandar","prudhvi","rama")
job=c("software developer","database architect",NA,"data analyst","data scintest")
dept=c(NA,NA,NA,NA,NA)
salary=c(250000L,3500000L,1200000L,4500000L,6700000L)
emp=data.frame(empid,empname,job,dept,salary)
emp
# empid empname                job dept  salary
#1     1   pavan software developer   NA  250000
#2     2     ram database architect   NA 3500000
#3     3 chandar               <NA>   NA 1200000
#4     4 prudhvi       data analyst   NA 4500000
#5     5    rama      data scintest   NA 6700000
sqldf(select * from emp)
sqldf("select * from emp")
#installing the package
#install.packages("sqldf")
#loading to install
#library(sqldf)
#require(sqldf)
#conforming the package is loaded or not
#search()
?sqldf
empid=c(1:5)
empid=1:5
empname=c("pavan","ram","chandar","prudhvi","rama")
job=c("software developer","database architect",NA,"data analyst","data scintest")
dept=c(NA,NA,NA,NA,NA)
salary=c(250000L,3500000L,1200000L,4500000L,6700000L)
emp=data.frame(empid,empname,job,dept,salary)
emp
# empid empname                job dept  salary
#1     1   pavan software developer   NA  250000
#2     2     ram database architect   NA 3500000
#3     3 chandar               <NA>   NA 1200000
#4     4 prudhvi       data analyst   NA 4500000
#5     5    rama      data scintest   NA 6700000
sqldf("select * from emp")
#empid empname                job dept  salary
#1     1   pavan software developer   NA  250000
#2     2     ram database architect   NA 3500000
#3     3 chandar               <NA>   NA 1200000
#4     4 prudhvi       data analyst   NA 4500000
#5     5    rama      data scintest   NA 6700000
#installing the package
#install.packages("sqldf")
#loading to install
#library(sqldf)
#require(sqldf)
#conforming the package is loaded or not
#search()
?sqldf
empid=c(1:5)
empid=1:5
empname=c("pavan","ram","chandar","prudhvi","rama")
job=c("software developer","database architect",NA,"data analyst","data scintest")
dept=c(NA,NA,NA,NA,NA)
salary=c(250000L,3500000L,1200000L,4500000L,6700000L)
emp=data.frame(empid,empname,job,dept,salary)
emp
# empid empname                job dept  salary
#1     1   pavan software developer   NA  250000
#2     2     ram database architect   NA 3500000
#3     3 chandar               <NA>   NA 1200000
#4     4 prudhvi       data analyst   NA 4500000
#5     5    rama      data scintest   NA 6700000
sqldf("select * from emp")
#empid empname                job dept  salary
#1     1   pavan software developer   NA  250000
#2     2     ram database architect   NA 3500000
#3     3 chandar               <NA>   NA 1200000
#4     4 prudhvi       data analyst   NA 4500000
#5     5    rama      data scintest   NA 6700000
?sqldf
reload(sqldf)
library(sqldf)
library(sqldf)
#installing the package
#install.packages("sqldf")
#loading to install
#library(sqldf)
#require(sqldf)
#conforming the package is loaded or not
#search()
?sqldf
library(sqldf)
empid=c(1:5)
empid=1:5
empname=c("pavan","ram","chandar","prudhvi","rama")
job=c("software developer","database architect",NA,"data analyst","data scintest")
dept=c(NA,NA,NA,NA,NA)
salary=c(250000L,3500000L,1200000L,4500000L,6700000L)
emp=data.frame(empid,empname,job,dept,salary)
emp
# empid empname                job dept  salary
#1     1   pavan software developer   NA  250000
#2     2     ram database architect   NA 3500000
#3     3 chandar               <NA>   NA 1200000
#4     4 prudhvi       data analyst   NA 4500000
#5     5    rama      data scintest   NA 6700000
sqldf("select * from emp")
#empid empname                job dept  salary
#1     1   pavan software developer   NA  250000
#2     2     ram database architect   NA 3500000
#3     3 chandar               <NA>   NA 1200000
#4     4 prudhvi       data analyst   NA 4500000
#5     5    rama      data scintest   NA 6700000
data()
#to see the list of the datasets
data()
#to see the list of the datasets
data()
data
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
install.packages(sqldf)
install.packages("sqldf"")
lkfnw
cwedfnkewlnfew
]we
few
ffew
few
few
ew
names(data)
install.packages("sqldf")
UCBAdmissions
UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
typeof(UCBAdmissions)
str(UCBAdmissions)
df
df = as.data.frame(UCBAdmissions,StringsAsFactors=F)
df
str(df)
df = as.data.frame(UCBAdmissions,StringsAsFactors=F)
df
str(df)
UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
typeof(UCBAdmissions)  #[1] "double"]
#structure of the UCBAdmissions data
str(UCBAdmissions)
#'table' num [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
#- attr(*, "dimnames")=List of 3
#..$ Admit : chr [1:2] "Admitted" "Rejected"
#..$ Gender: chr [1:2] "Male" "Female"
#..$ Dept  : chr [1:6] "A" "B" "C" "D" ...
#converting the
#stringasfactoe =f is used
df = as.data.frame(UCBAdmissions,StringsAsFactors=F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : Factor w/ 2 levels "Admitted","Rejected": 1 2 1 2 1 2 1 2 1 2 ...
#$ Gender: Factor w/ 2 levels "Male","Female": 1 1 2 2 1 1 2 2 1 1 ...
#$ Dept  : Factor w/ 6 levels "A","B","C","D",..: 1 1 1 1 2 2 2 2 3 3 ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
df = as.data.frame(UCBAdmissions,StringsAsFactors=F)
df
str(df)
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
summery(df)
summary(df)
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : chr  "Admitted" "Rejected" "Admitted" "Rejected" ...
#$ Gender: chr  "Male" "Male" "Female" "Female" ...
#$ Dept  : chr  "A" "A" "A" "A" ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
summary(df)
UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
typeof(UCBAdmissions)  #[1] "double"]
#structure of the UCBAdmissions data
str(UCBAdmissions)
#'table' num [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
#- attr(*, "dimnames")=List of 3
#..$ Admit : chr [1:2] "Admitted" "Rejected"
#..$ Gender: chr [1:2] "Male" "Female"
#..$ Dept  : chr [1:6] "A" "B" "C" "D" ...
#converting the
#stringasfactoe =f is used
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : chr  "Admitted" "Rejected" "Admitted" "Rejected" ...
#$ Gender: chr  "Male" "Male" "Female" "Female" ...
#$ Dept  : chr  "A" "A" "A" "A" ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
summary(df)
df1=as.data.frame(UCBAdmissions)
df1
str(df1)
summary(df1)
summary(df)
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : chr  "Admitted" "Rejected" "Admitted" "Rejected" ...
#$ Gender: chr  "Male" "Male" "Female" "Female" ...
#$ Dept  : chr  "A" "A" "A" "A" ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
df1=as.data.frame(UCBAdmissions)
df1
str(df1)
summary(df1)
summary(df)
UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
typeof(UCBAdmissions)  #[1] "double"]
#structure of the UCBAdmissions data
str(UCBAdmissions)
#'table' num [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
#- attr(*, "dimnames")=List of 3
#..$ Admit : chr [1:2] "Admitted" "Rejected"
#..$ Gender: chr [1:2] "Male" "Female"
#..$ Dept  : chr [1:6] "A" "B" "C" "D" ...
#converting the
#stringasfactoe =f is used
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : chr  "Admitted" "Rejected" "Admitted" "Rejected" ...
#$ Gender: chr  "Male" "Male" "Female" "Female" ...
#$ Dept  : chr  "A" "A" "A" "A" ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
df1=as.data.frame(UCBAdmissions)
df1
str(df1)
summary(df1)
summary(df)
#note inside double quote we should not use double quotes again so use use single quots
sqldf("select * from df while gender='F'")
#note inside double quote we should not use double quotes again so use use single quots
sqldf("select * from df while gender='F'")
UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
typeof(UCBAdmissions)  #[1] "double"]
#structure of the UCBAdmissions data
str(UCBAdmissions)
#'table' num [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
#- attr(*, "dimnames")=List of 3
#..$ Admit : chr [1:2] "Admitted" "Rejected"
#..$ Gender: chr [1:2] "Male" "Female"
#..$ Dept  : chr [1:6] "A" "B" "C" "D" ...
#converting the
#stringasfactoe =f is used
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : chr  "Admitted" "Rejected" "Admitted" "Rejected" ...
#$ Gender: chr  "Male" "Male" "Female" "Female" ...
#$ Dept  : chr  "A" "A" "A" "A" ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
df1=as.data.frame(UCBAdmissions)
df1
str(df1)
summary(df1)
summary(df)
#selecting the female in the df dataframe
#note inside double quote we should not use double quotes again so use use single quots
sqldf("select * from df while gender='F'")
library(sqldf)
library(sqldf)
UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
typeof(UCBAdmissions)  #[1] "double"]
#structure of the UCBAdmissions data
str(UCBAdmissions)
#'table' num [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
#- attr(*, "dimnames")=List of 3
#..$ Admit : chr [1:2] "Admitted" "Rejected"
#..$ Gender: chr [1:2] "Male" "Female"
#..$ Dept  : chr [1:6] "A" "B" "C" "D" ...
#converting the
#stringasfactoe =f is used
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : chr  "Admitted" "Rejected" "Admitted" "Rejected" ...
#$ Gender: chr  "Male" "Male" "Female" "Female" ...
#$ Dept  : chr  "A" "A" "A" "A" ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
df1=as.data.frame(UCBAdmissions)
df1
str(df1)
summary(df1)
summary(df)
#selecting the female in the df dataframe
#note inside double quote we should not use double quotes again so use use single quots
sqldf("select * from df while gender='F'")
#note inside double quote we should not use double quotes again so use use single quots
sqldf("select * from df while gender='Female'")
#note inside double quote we should not use double quotes again so use use single quots
sqldf("select * from df where gender='Female'")
sqldf("select * from df where gender like "F")
sqldf("select * from df where gender like 'F'")
sqldf("select * from df where gender like 'F%'")
sqldf("select * from df where gender like 'F*'")
sqldf("select * from df where gender like 'F%'")
sqldf("select * from df where Admit like 'A%'")
sqldf("select Dept from  df group by Dept")
sqldf("select  from  df group by Dept")
sqldf("select * from  df group by Dept")
sqldf("select max(count(Dept)) from  df group by Dept")
sqldf("select count(Dept) from  df group by Dept")
sqldf("select count(Dept) from  df group by Dept")
sqldf("select Dept from  df group by Dept")
sqldf("select max(Dept) from  df group by Dept")
sqldf("select Dept,Freq from  df group by Dept")
sqldf("select Dept,sum(Freq) from  df group by Dept")
sqldf("select Dept,Freq from  df group by Dept")
sqldf("select * from df where)
sqldf("select Dept,Freq from  df group by Dept")
sqldf("select * from df )
sqldf("select Dept,Freq from  df group by Dept")
sqldf("select * from df")
sqldf("select Dept,sum(Freq) from  df group by Dept")
sqldf("select Dept,sum(Freq) as total_freq from  df group by Dept order by total_treq ")
sqldf("select Dept,sum(Freq) as total_freq from  df group by Dept order by total_freq ")
sqldf("select Dept,sum(Freq) as total_freq from  df group by Dept order by total_freq  desc")
sqldf("select Dept,max(Freq) as total_freq from  df group by Dept order by total_freq  desc")
sqldf("select Dept,sum(Freq) as total_freq from  df group by Dept order by total_freq  desc")
library(sqldf)
UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
typeof(UCBAdmissions)  #[1] "double"]
#structure of the UCBAdmissions data
str(UCBAdmissions)
#'table' num [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
#- attr(*, "dimnames")=List of 3
#..$ Admit : chr [1:2] "Admitted" "Rejected"
#..$ Gender: chr [1:2] "Male" "Female"
#..$ Dept  : chr [1:6] "A" "B" "C" "D" ...
#converting the
#stringasfactoe =f is used
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : chr  "Admitted" "Rejected" "Admitted" "Rejected" ...
#$ Gender: chr  "Male" "Male" "Female" "Female" ...
#$ Dept  : chr  "A" "A" "A" "A" ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
df1=as.data.frame(UCBAdmissions)
df1
str(df1)
summary(df1)
summary(df)
#selecting the female in the df dataframe
#note inside double quote we should not use double quotes again so use use single quots
sqldf("select * from df where gender='Female'")
sqldf("select * from df where gender like 'F%'")
sqldf("select * from df where Admit like 'A%'")
sqldf("select * from df")
sqldf("select Dept,sum(Freq) as total_freq from  df group by Dept order by total_freq  desc")
sqldf("select Dept,sum(Freq) as total_freq from  df group by Dept order by total_freq  desc")
letters[1:5]
LETTERS[1:5]
round(10,13)
round(10,13)
round(10,177)
LETTERS[1:5]
library(sqldf)
UCBAdmissions
data = data.frame(UCBAdmissions)
data
#to know about the dataset type
?UCBAdmissions
names(data)
typeof(UCBAdmissions)  #[1] "double"]
#structure of the UCBAdmissions data
str(UCBAdmissions)
#'table' num [1:2, 1:2, 1:6] 512 313 89 19 353 207 17 8 120 205 ...
#- attr(*, "dimnames")=List of 3
#..$ Admit : chr [1:2] "Admitted" "Rejected"
#..$ Gender: chr [1:2] "Male" "Female"
#..$ Dept  : chr [1:6] "A" "B" "C" "D" ...
#converting the
#stringasfactoe =f is used
df = as.data.frame(UCBAdmissions,stringsAsFactors =F)
df
str(df)
#'data.frame':	24 obs. of  4 variables:
#$ Admit : chr  "Admitted" "Rejected" "Admitted" "Rejected" ...
#$ Gender: chr  "Male" "Male" "Female" "Female" ...
#$ Dept  : chr  "A" "A" "A" "A" ...
#$ Freq  : num  512 313 89 19 353 207 17 8 120 205 ...
df1=as.data.frame(UCBAdmissions)
df1
str(df1)
summary(df1)
summary(df)
#selecting the female in the df dataframe
#note inside double quote we should not use double quotes again so use use single quots
sqldf("select * from df where gender='Female'")
sqldf("select * from df where gender like 'F%'")
sqldf("select * from df where Admit like 'A%'")
sqldf("select * from df")
sqldf("select Dept,sum(Freq) as total_freq from  df group by Dept order by total_freq  desc")
letters[1:5]
LETTERS[1:5]
round(6,min=10,max=30)
runif(6,min=10,max=30)
round(runif(6,min=10,max=30))
round(runif(6,min=10,max=30))
l=sqldf("select distinct(Dept) from df")
l
typrof(l)
typeof(l)
majors = data.frame(major=['english','telugu','maths','physics','chemistry','social'],l,faculty=round(runif(6,min=10,max=30)))
majors = data.frame(major=c('english','telugu','maths','physics','chemistry','social'),l,faculty=round(runif(6,min=10,max=30)))
majors
majors = data.frame(major=c('english','telugu','maths','physics','chemistry','social'),l,faculty=round(runif(6,min=10,max=30)))
majors
LETTERS[1:5]
round(runif(6,min=10,max=30))
majors = data.frame(major=c('english','telugu','maths','physics','chemistry','social'),l,faculty=round(runif(6,min=10,max=30)))
majors
setwd("D:\\sem6\\INT232_DATA SCIENCE TOOLBOX  R PROGRAMMING\\r_code")
